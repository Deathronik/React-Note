{"version":3,"sources":["components/Header/index.jsx","components/Note/index.jsx","components/Modal/index.jsx","App.js","index.js","components/Modal/Modal.module.scss","components/Note/Note.module.scss","components/Header/Header.module.scss"],"names":["Header","onClickOpenAdd","className","styles","headerLogo","headerLogoImg","height","width","src","alt","onClick","title","undefined","text","isNewNote","Note","id","date","onOpenModal","note","noteTitle","noteContent","noteDate","Modal","onClose","onAddHandler","onUpdateHandler","onDelHandler","modalObj","React","useState","isNewNoteObjTitle","setNewNoteObjTitle","isNewNoteObjText","setNewNoteObjText","newNoteObj","uuid","moment","format","overlay","modal","maxLength","onChange","event","target","value","defaultValue","placeholder","viewBox","fill","xmlns","x","y","rx","stroke","d","content","footer","App","modalOpened","setModalOpened","modalData","setModalData","searchData","setSearchData","isNotesArr","setNotesArr","displayNotes","setDisplayNotes","onCloseHandler","document","querySelector","modalStyles","classList","add","fadeOut","setTimeout","useEffect","style","overflow","getNotes","JSON","parse","localStorage","getItem","updateNotes","newArr","arr","setItem","stringify","filter","item","toLowerCase","includes","slice","unshift","onClickAdd","updateNote","find","onClickUpdate","noteId","onClickDel","noteAddObj","onClickOpenAddHandler","searchInputHandler","type","length","map","obj","noteObj","onOpenModalNote","ReactDOM","render","StrictMode","getElementById","module","exports"],"mappings":"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","file":"static/js/main.b1825f4d.chunk.js","sourcesContent":["import styles from './Header.module.scss'\r\n\r\nfunction Header({onClickOpenAdd}) {\r\n    const onClickAdd = () => {\r\n        onClickOpenAdd({title: undefined, text: undefined, isNewNote: true})\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <div className={styles.headerLogo}>\r\n                <img className={styles.headerLogoImg} height={50} width={50} src=\"../../img/logo.png\" alt=\"Logo\"/>\r\n                <div>\r\n                    <h2>React Note</h2>\r\n                    <p>&nbsp;Best note service</p>\r\n                </div>\r\n            </div>\r\n            <button onClick={onClickAdd}>\r\n                ADD NEW NOTE +\r\n            </button>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import styles from \"./Note.module.scss\";\r\n\r\nfunction Note({id, title, text, date, onOpenModal}) {\r\n    const onOpen = () => {\r\n        onOpenModal({id: id, title: title, text: text, isNewNote: false})\r\n    }\r\n\r\n    return (\r\n        <div onClick={onOpen} className={styles.note}>\r\n            <div className={styles.noteTitle}>\r\n                {title}\r\n            </div>\r\n            <div className={styles.noteContent}>\r\n                {text}\r\n            </div>\r\n            <div className={styles.noteDate}>\r\n                last update: <br/>\r\n                {date}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Note;","import React from 'react'\r\nimport uuid from 'react-uuid'\r\nimport moment from \"moment\";\r\n\r\nimport styles from './Modal.module.scss'\r\n\r\nfunction Modal({onClose, onAddHandler, onUpdateHandler, onDelHandler, modalObj}) {\r\n    const [isNewNoteObjTitle, setNewNoteObjTitle] = React.useState(modalObj.isNewNote ? '' : modalObj.title)\r\n    const [isNewNoteObjText, setNewNoteObjText] = React.useState(modalObj.isNewNote ? '' : modalObj.text)\r\n\r\n    const newNoteObj = {\r\n        id: modalObj.isNewNote ? uuid() : modalObj.id,\r\n        title: isNewNoteObjTitle,\r\n        text: isNewNoteObjText,\r\n        date: moment().format(\"DD.MM.YYYY HH:mm\")\r\n    }\r\n\r\n    const onDel = () => {\r\n        onDelHandler(modalObj.id)\r\n    }\r\n\r\n    const onUpdate = () => {\r\n\r\n        if (isNewNoteObjTitle !== '' && isNewNoteObjText !== '' && (isNewNoteObjTitle !== modalObj.title || isNewNoteObjText !== modalObj.text)) {\r\n            onUpdateHandler(newNoteObj);\r\n        }\r\n    }\r\n\r\n    const onAdd = () => {\r\n\r\n        if (isNewNoteObjTitle !== '' && isNewNoteObjText !== '') {\r\n            onAddHandler(newNoteObj);\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={styles.overlay}>\r\n            <div className={styles.modal}>\r\n                <div className={styles.title}>\r\n                    <input maxLength={35} onChange={(event) => setNewNoteObjTitle(event.target.value)}\r\n                           defaultValue={modalObj.title} placeholder=\"Title of note...\">\r\n                    </input>\r\n                    <svg onClick={onClose} width=\"23\" height=\"23\" viewBox=\"0 0 23 23\" fill=\"none\"\r\n                         xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <rect x=\"0.5\" y=\"0.5\" width=\"22\" height=\"22\" rx=\"4.5\" fill=\"white\" stroke=\"#E67F7F\"/>\r\n                        <path\r\n                            d=\"M15 8.41243L14.5876 8L11.5 11.0876L8.41243 8L8 8.41243L11.0876 11.5L8 14.5876L8.41243 15L11.5 11.9124L14.5876 15L15 14.5876L11.9124 11.5L15 8.41243Z\"\r\n                            fill=\"#EB7A7A\"/>\r\n                    </svg>\r\n                </div>\r\n                <div className={styles.content}>\r\n                    <textarea maxLength={980} onChange={(event) => setNewNoteObjText(event.target.value)}\r\n                              defaultValue={modalObj.text} placeholder=\"Text of note...\"/>\r\n                </div>\r\n                <div className={styles.footer}>\r\n                    <button onClick={modalObj.isNewNote ? onAdd : onUpdate}>\r\n                        {modalObj.isNewNote ? \"ADD NEW NOTE +\" : \"UPDATE NOTE\"}\r\n                    </button>\r\n                    {!modalObj.isNewNote && <img onClick={onDel} height={40} width={40} src=\"/img/trash.svg\" alt=\"Trash\"/>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Modal;","import React from \"react\"\nimport Header from \"./components/Header\";\nimport Note from \"./components/Note\";\nimport Modal from \"./components/Modal\";\n\nimport modalStyles from \"./components/Modal/Modal.module.scss\"\n\nfunction App() {\n    const [modalOpened, setModalOpened] = React.useState(false)\n    const [modalData, setModalData] = React.useState({})\n    const [searchData, setSearchData] = React.useState('')\n    const [isNotesArr, setNotesArr] = React.useState([])\n    const [displayNotes, setDisplayNotes] = React.useState([])\n\n    const onClickDel = (noteId) => {\n        let newArr = isNotesArr.slice()\n        newArr = newArr.filter(note => note.id !== noteId)\n\n        onCloseHandler()\n        updateNotes(newArr)\n    }\n\n    const onClickUpdate = (newNoteObj) => {\n        let newArr = isNotesArr.slice()\n\n        let updateNote = newArr.find(note => note.id === newNoteObj.id)\n        newArr = newArr.filter(note => note.id !== newNoteObj.id)\n\n        updateNote.title = newNoteObj.title\n        updateNote.text = newNoteObj.text\n        updateNote.date = newNoteObj.date\n\n        newArr.unshift(updateNote)\n        onCloseHandler()\n        updateNotes(newArr)\n    }\n\n    const onClickAdd = (newNoteObj) => {\n        let newArr\n\n        if (isNotesArr)\n            newArr = isNotesArr.slice()\n        else\n            newArr = []\n\n        newArr.unshift(newNoteObj)\n        onCloseHandler()\n        updateNotes(newArr)\n    }\n\n    const onClickOpenAddHandler = (noteAddObj) => {\n        setModalData(noteAddObj)\n        setModalOpened(true)\n    }\n\n    const onCloseHandler = () => {\n        const overlay = document.querySelector(`.${modalStyles.overlay}`)\n        overlay.classList.add(`${modalStyles.fadeOut}`)\n\n        setTimeout(\n            () => {\n                setModalOpened(false)\n            }, 400);\n    }\n\n    const onOpenModalNote = (noteObj) => {\n        setModalData(noteObj)\n        setModalOpened(true)\n    }\n\n    React.useEffect(() => {\n        const body = document.querySelector('body');\n        body.style.overflow = modalOpened ? 'hidden' : 'auto';\n    }, [modalOpened])\n\n    const setNotes = (arr) => {\n        localStorage.setItem(\"notes\", JSON.stringify(arr))\n    }\n\n    const getNotes = () => {\n        setNotesArr(JSON.parse(localStorage.getItem(\"notes\")))\n    }\n\n    const updateNotes = (newArr) => {\n        setNotes(newArr)\n        getNotes()\n    }\n\n    const searchInputHandler = (event) => {\n        setSearchData(event.target.value)\n    }\n\n    React.useEffect(() => {\n        getNotes()\n    }, [])\n\n    React.useEffect(() => {\n        const searchNotes = () => {\n            if (searchData !== '') {\n                setDisplayNotes(isNotesArr ? isNotesArr.filter((item) => {\n                    return item.title.toLowerCase().includes(searchData.toLowerCase()) ||\n                        item.text.toLowerCase().includes(searchData.toLowerCase())\n                }) : [])\n            } else {\n                setDisplayNotes(isNotesArr ? isNotesArr : [])\n            }\n        }\n        searchNotes()\n    }, [searchData, isNotesArr])\n\n    return (\n        <div className=\"wrapper clear\">\n            {\n                modalOpened && <Modal onAddHandler={(newNoteObj) => onClickAdd(newNoteObj)}\n                                      onUpdateHandler={(newNoteObj) => onClickUpdate(newNoteObj)}\n                                      onClose={onCloseHandler}\n                                      modalObj={modalData}\n                                      onDelHandler={(noteId) => onClickDel(noteId)}/>\n            }\n            <Header onClickOpenAdd={(noteAddObj) => onClickOpenAddHandler(noteAddObj)}/>\n            <div className=\"content\">\n                <div className=\"contentHeader\">\n                    <h2>\n                        {\n                            searchData === '' ? 'All Notes' : `Search by: ${searchData}`\n                        }\n                    </h2>\n                    <div className=\"searchBlock\">\n                        <img height={14} width={14} src=\"./img/search.png\" alt=\"Search\"/>\n                        <input maxLength={35} value={searchData} onChange={event => searchInputHandler(event)}\n                               type=\"text\"\n                               placeholder=\"Search notes...\"/>\n                    </div>\n                </div>\n                <div className=\"contentWrapper\">\n                    {displayNotes && displayNotes.length !== 0 ? displayNotes.map((obj) => (\n                        <Note key={obj.id}\n                              id={obj.id}\n                              title={obj.title}\n                              text={obj.text}\n                              date={obj.date}\n                              onOpenModal={(noteObj) => (onOpenModalNote(noteObj))}\n                        />)) : <div className=\"noNotes\">\n                        <h2>{searchData === '' ? 'No notes... You can add a new note' : 'No notes find... Pleas try again'}</h2>\n                    </div>\n                    }\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__B1zNr\",\"fadeIn\":\"Modal_fadeIn__2pLqs\",\"modal\":\"Modal_modal__hOZzP\",\"title\":\"Modal_title__rRqBV\",\"fill\":\"Modal_fill__b2HPp\",\"popup\":\"Modal_popup__1hdRO\",\"content\":\"Modal_content__1m2lk\",\"footer\":\"Modal_footer__1Zqxw\",\"fadeOut\":\"Modal_fadeOut__DhV_f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"note\":\"Note_note__3Hz3d\",\"noteTitle\":\"Note_noteTitle__1hEHn\",\"drop\":\"Note_drop__3IzB5\",\"noteContent\":\"Note_noteContent__2PjLt\",\"noteDate\":\"Note_noteDate__opXmM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerLogo\":\"Header_headerLogo__dAf-r\",\"headerLogoImg\":\"Header_headerLogoImg__1BlXt\"};"],"sourceRoot":""}